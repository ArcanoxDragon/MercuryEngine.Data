name: Release mdlconvert

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]
  pull_request:

jobs:

  build:
    strategy:
      fail-fast: false
      matrix:
        configuration: [Debug, Release]
        os:
          - { name: "Windows", image: "windows-latest", rid: "win-x64" }
          - { name: "Linux", image: "ubuntu-latest", rid: "linux-x64" }

    runs-on: ${{ matrix.os.image }}

    name: ${{ matrix.os.name }} Executable

    env:
      Solution_Name: MercuryEngine.Data.sln
      Project_Path: tools\MercuryEngine.Data.Tools.ModelConverter\MercuryEngine.Data.Tools.ModelConverter.csproj
      Publish_Path: tools\MercuryEngine.Data.Tools.ModelConverter\bin\publish

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    # Use Nerdbank.GitVersioning to set version variables: https://github.com/AArnott/nbgv
    - name: Use Nerdbank.GitVersioning to set version variables
      uses: dotnet/nbgv@v0.4.2
      with:
        setAllVars: true

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: dotnet restore -r $env:RID $env:Solution_Name
      env:
        RID: ${{ matrix.os.rid }}

    # Execute all unit tests in the solution
    - name: Execute Core unit tests
      run: dotnet test -c $env:Configuration --filter "FullyQualifiedName~MercuryEngine.Data.Core.Tests"
      env:
        Configuration: ${{ matrix.configuration }}

    # Publish the binary
    - name: Publish binary
      run: dotnet publish -r $env:RID -o "${{ env.Publish_Path }}\${{ env.RID }}" -p:DebugSymbols=False $env:Project_Path
      if: matrix.configuration == 'Release'
      env:
        RID: ${{ matrix.os.rid }}

    # Upload the artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.configuration == 'Release'
      with:
        name: mdlconvert (${{ env.RID }})
        if-no-files-found: error
        path: ${{ env.Publish_Path }}\${{ env.RID }}
      env:
        RID: ${{ matrix.os.rid }}

  release:
    runs-on: "ubuntu-latest"
    name: Release
    needs:
      - build
    if: ${{ github.event_name != 'pull_request' && github.event_name != 'merge_group' }}

    steps:
      - name: Download binaries
        uses: actions/download-artifact@v5.0.0
        with:
          pattern: '* *'
          path: publish/

      - name: Upload binaries to GitHub Release
        uses: svenstaro/upload-release-action@2.11.2
        if: ${{ startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/main') }}
        with:
          file: packages/mdlconvert*/**
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true
          prerelease: true
          draft: ${{ startsWith(github.ref, 'refs/heads/main') }}
          body: "Release executable"
